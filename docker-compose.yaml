version: "3"
services:
  postgres:
    image: postgres:14-alpine
    restart: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGPORT=${PGPORT}
    networks:
      default:
        aliases:
          - db_userland
    expose:
      - 5432
  adminer:
    image: adminer:standalone
    restart: on-failure
    ports:
      - "8081:8080/tcp"
    networks:
      default:
        aliases:
          - adminer
    depends_on:
      - migrate
      - postgres
  migrate:
    image: migrate/migrate
    restart: on-failure
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]
    depends_on:
      - postgres
  userland:
    image: golang:1.16
    working_dir: /todolist
    volumes:
      - ./:/todolist
    command: /bin/bash -c "go run ."
    ports:
      - "8080:80/tcp"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      default:
        aliases:
          - userland_service
    depends_on:
      - postgres
      - migrate
      - adminer
      - redis
      - zookeeper
      - kafka
  redis:
    image: redis:6.2.6-alpine
    restart: on-failure
    expose:
      - 6379
    ports:
      - "6379:6379/tcp"
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181/tcp"
    restart: on-failure
    expose:
      - 2181
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    hostname: kafka
    ports:
      - "9092:9092/tcp"
    restart: on-failure
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    expose:
      - 9092
networks:
  default:
